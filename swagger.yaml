paths:
  /auth/register:
    post:
      summary: Register a new account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                companyName:
                  type: string
                password:
                  type: string
                address:
                  type: string
                zipCode:
                  type: string
                city:
                  type: string
                country:
                  type: string
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
        '400':
          description: Email already exists
        '500':
          description: Registration failed

  /auth/login:
    post:
      summary: Login to an existing account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
        '401':
          description: Invalid email or password
        '500':
          description: Login failed

  /media/uploadMedia:
    post:
      summary: Upload media (logo, images, videos, model3d)
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                logo:
                  type: string
                  format: binary
                images:
                  type: array
                  items:
                    type: string
                    format: binary
                videos:
                  type: array
                  items:
                    type: string
                    format: binary
                model3d:
                  type: string
                  format: binary
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Media uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  uploadedFiles:
                    type: array
                    items:
                      type: string
                  user:
                    $ref: '#/components/schemas/User'
        '400':
          description: Invalid request
        '500':
          description: Server error

components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
        email:
          type: string
        companyName:
          type: string
        address:
          type: string
        zipCode:
          type: string
        city:
          type: string
        country:
          type: string
        logo:
          type: string
          description: Media ID or URL for logo
        images:
          type: array
          items:
            type: string
          description: Array of media IDs or URLs for images
        videos:
          type: array
          items:
            type: string
          description: Array of media IDs or URLs for videos
        model3d:
          type: string
          description: Media ID or URL for 3D model

security:
  - BearerAuth: []
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer